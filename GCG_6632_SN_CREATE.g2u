Program.Sub.ScreenSU.Start
Gui.Form..Create(BaseForm)
Gui.Form..Caption("Serial Number Creation")
Gui.Form..Size(384,155)
Gui.Form..MinX(0)
Gui.Form..MinY(0)
Gui.Form..Position(0,0)
Gui.Form..AlwaysOnTop(False)
Gui.Form..FontName("Tahoma")
Gui.Form..FontSize(8.25)
Gui.Form..ControlBox(True)
Gui.Form..MaxButton(True)
Gui.Form..MinButton(True)
Gui.Form..MousePointer(0)
Gui.Form..Moveable(True)
Gui.Form..Sizeable(True)
Gui.Form..ShowInTaskBar(True)
Gui.Form..TitleBar(True)
Gui.Form..Event(UnLoad,Form_UnLoad)
Gui.Form.frame1.Create(Frame)
Gui.Form.frame1.Enabled(True)
Gui.Form.frame1.Visible(True)
Gui.Form.frame1.Zorder(0)
Gui.Form.frame1.Size(377,117)
Gui.Form.frame1.Position(3,3)
Gui.Form.frame1.Caption("")
Gui.Form.frame1.FontName("Tahoma")
Gui.Form.frame1.FontSize(8.25)
Gui.Form.lbl1.Create(Label,"Prefix",True,28,13,0,14,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl1.BorderStyle(0)
Gui.Form.lbl1.Parent("frame1")
Gui.Form.txtMask.Create(TextBox,"",True,83,20,0,56,22,False,0,"Tahoma",8.25,,1)
Gui.Form.txtMask.Parent("frame1")
Gui.Form.txtMask.MaxLength(10)
Gui.Form.txtEndSeq.Create(TextBox,"",True,103,20,0,263,64,True,0,"Tahoma",8.25,,1)
Gui.Form.txtEndSeq.MaxLength(20)
Gui.Form.txtEndSeq.Parent("frame1")
Gui.Form.txtStartSeq.Create(TextBox,"",True,104,20,0,155,64,True,0,"Tahoma",8.25,,1)
Gui.Form.txtStartSeq.MaxLength(20)
Gui.Form.txtStartSeq.Parent("frame1")
Gui.Form.txtTotalQty.Create(TextBox,"",True,70,20,0,80,64,False,0,"Tahoma",8.25,,1)
Gui.Form.txtTotalQty.Parent("frame1")
Gui.Form.txtTotalQty.NumericOnly(2)
Gui.Form.txtCustOrder.Create(TextBox,"",True,70,20,0,5,64,False,0,"Tahoma",8.25,,1)
Gui.Form.txtCustOrder.Parent("frame1")
Gui.Form.txtCustOrder.NumericOnly(2)
Gui.Form.txtCopies.Create(TextBox,"",True,30,20,0,252,22,False,0,"Tahoma",8.25,,1)
Gui.Form.txtCopies.Parent("frame1")
Gui.Form.txtCopies.NumericOnly(2)
Gui.Form.txtJump.Create(TextBox,"",True,50,20,0,195,22,False,0,"Tahoma",8.25,,1)
Gui.Form.txtJump.Parent("frame1")
Gui.Form.txtJump.NumericOnly(2)
Gui.Form.lbl9.Create(Label,"End Seq",True,39,13,0,299,48,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl9.BorderStyle(0)
Gui.Form.lbl9.Parent("frame1")
Gui.Form.txtPrefix.Create(TextBox,"",True,46,20,0,5,22,False,0,"Tahoma",8.25,,1)
Gui.Form.txtPrefix.Parent("frame1")
Gui.Form.txtPrefix.MaxLength(6)
Gui.Form.txtSuffix.Create(TextBox,"",True,46,20,0,143,22,False,0,"Tahoma",8.25,,1)
Gui.Form.txtSuffix.MaxLength(6)
Gui.Form.txtSuffix.Parent("frame1")
Gui.Form.lbl2.Create(Label,"Mask",True,24,13,0,86,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl2.BorderStyle(0)
Gui.Form.lbl2.Parent("frame1")
Gui.Form.lbl8.Create(Label,"Start Seq",True,45,13,0,180,48,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl8.BorderStyle(0)
Gui.Form.lbl8.Parent("frame1")
Gui.Form.lbl7.Create(Label,"Total Qty",True,45,13,0,92,48,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl7.BorderStyle(0)
Gui.Form.lbl7.Parent("frame1")
Gui.Form.lbl6.Create(Label,"Cust Qty",True,43,13,0,18,48,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl6.BorderStyle(0)
Gui.Form.lbl6.Parent("frame1")
Gui.Form.lbl5.Create(Label,"Copies",True,32,13,0,251,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl5.BorderStyle(0)
Gui.Form.lbl5.Parent("frame1")
Gui.Form.lbl4.Create(Label,"Jump",True,25,13,0,211,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl4.BorderStyle(0)
Gui.Form.lbl4.Parent("frame1")
Gui.Form.lbl3.Create(Label,"Suffix",True,28,13,0,152,5,True,0,"Tahoma",8.25,,0,0)
Gui.Form.lbl3.BorderStyle(0)
Gui.Form.lbl3.Parent("frame1")
Gui.Form.cmdCalc.Create(Button)
Gui.Form.cmdCalc.Enabled(True)
Gui.Form.cmdCalc.Visible(True)
Gui.Form.cmdCalc.Zorder(0)
Gui.Form.cmdCalc.Size(175,23)
Gui.Form.cmdCalc.Position(10,91)
Gui.Form.cmdCalc.Caption("Calc")
Gui.Form.cmdCalc.FontName("Tahoma")
Gui.Form.cmdCalc.FontSize(8.25)
Gui.Form.cmdCalc.Event(Click,cmdCalc_Click)
Gui.Form.cmdSave.Create(Button)
Gui.Form.cmdSave.Enabled(True)
Gui.Form.cmdSave.Visible(True)
Gui.Form.cmdSave.Zorder(0)
Gui.Form.cmdSave.Size(175,23)
Gui.Form.cmdSave.Position(193,91)
Gui.Form.cmdSave.Caption("Save")
Gui.Form.cmdSave.FontName("Tahoma")
Gui.Form.cmdSave.FontSize(8.25)
Gui.Form.cmdSave.Event(Click,cmdSave_Click)
Gui.Form2..Create(BaseForm)
Gui.Form2..Caption("Rework Serial Number")
Gui.Form2..Size(383,428)
Gui.Form2..MinX(0)
Gui.Form2..MinY(0)
Gui.Form2..Position(0,0)
Gui.Form2..AlwaysOnTop(False)
Gui.Form2..FontName("Tahoma")
Gui.Form2..FontSize(8.25)
Gui.Form2..ControlBox(True)
Gui.Form2..MaxButton(True)
Gui.Form2..MinButton(True)
Gui.Form2..MousePointer(0)
Gui.Form2..Moveable(True)
Gui.Form2..Sizeable(True)
Gui.Form2..ShowInTaskBar(True)
Gui.Form2..TitleBar(True)
Gui.Form2..Event(UnLoad,Form2_UnLoad)
Gui.Form2.cmdSelect.Create(Button)
Gui.Form2.cmdSelect.Enabled(True)
Gui.Form2.cmdSelect.Visible(True)
Gui.Form2.cmdSelect.Zorder(0)
Gui.Form2.cmdSelect.Size(75,23)
Gui.Form2.cmdSelect.Position(305,4)
Gui.Form2.cmdSelect.Caption("Select")
Gui.Form2.cmdSelect.FontName("Tahoma")
Gui.Form2.cmdSelect.FontSize(8.25)
Gui.Form2.cmdSelect.Event(Click,cmdSelect_Click)
Gui.Form2.GsGcDisplay.Create(GsGridControl)
Gui.Form2.GsGcDisplay.Enabled(True)
Gui.Form2.GsGcDisplay.Visible(True)
Gui.Form2.GsGcDisplay.Zorder(0)
Gui.Form2.GsGcDisplay.Size(374,363)
Gui.Form2.GsGcDisplay.Position(5,30)
Gui.Form2.GsGcDisplay.Anchor(15)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
v.Global.sCustomer.Declare
v.Global.sPart.Declare
v.Global.fCustQty.Declare
v.Global.sJob.Declare
v.Global.sSuffix.Declare
v.Global.bCal.Declare(Boolean, False)
v.Global.bFR.Declare(Boolean, False)
v.Global.bLD.Declare(Boolean, False)
Program.Sub.Preflight.End

Program.Sub.Main.Start
v.Local.bRework.Declare
f.Intrinsic.Control.Try
	'16670 Job Header User 1
	Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout	
	'Check we are on the correct hook
	f.Intrinsic.Control.If(v.Caller.Hook, =, 16630)
		Variable.Passed.000093.Set("SN Calc")
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(v.Caller.Hook, =, 16690)	
		'Set Global
		v.Global.sJob.Set(Variable.Passed.000003)
		v.Global.sSuffix.Set(Variable.Passed.000004)
		v.Global.sCustomer.Set(Variable.Passed.000018)
		f.Intrinsic.String.GSSPartString(Variable.Passed.000012, Variable.Passed.000013, v.Global.sPart)
		v.Global.fCustQty.Set(Variable.Passed.000044)
		
		'
		f.Intrinsic.String.IsInString(v.Global.sSuffix, "RD", "True", v.Local.bRework)
		f.Intrinsic.Control.If(v.Local.bRework)
			v.Local.bRework.Set(False)
		f.Intrinsic.Control.Else	
			f.Intrinsic.String.IsInString(v.Global.sSuffix, "R", "True", v.Local.bRework)
		f.Intrinsic.Control.EndIf
		
		f.Intrinsic.Control.If(v.Local.bRework)
			f.Intrinsic.Control.CallSub(createDisplayDT)
			f.Intrinsic.Control.CallSub(loadGridProperties)
			gui.Form2..Show
		f.Intrinsic.Control.Else
			f.Intrinsic.Control.CallSub(loadDefaults)
			gui.Form..Show
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.Form_UnLoad.Start
f.Intrinsic.Control.End
Program.Sub.Form_UnLoad.End

Program.Sub.cmdCalc_Click.Start
v.Local.sSQL.Declare
v.Local.fBeg.Declare
v.Local.fEnd.Declare
v.Local.fTmp.Declare
v.Local.iCopies.Declare
v.Local.iJump.Declare
v.Local.sRet.Declare
f.Intrinsic.Control.Try
	v.Global.bCal.Set(False)
	'Check
	f.Intrinsic.Control.If(v.Screen.Form!txtJump.Text, =, "")
		gui.Form.txtJump.Text("1")
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.Screen.Form!txtCopies.Text, =, "")
		gui.Form.txtCopies.Text("1")
	f.Intrinsic.Control.EndIf
	
	
	f.Intrinsic.Control.If(v.Screen.Form!txtCopies.Text, =, "0")
		gui.Form.txtCopies.Text("1")
	f.Intrinsic.Control.EndIf	
	'Get Variables
	v.Local.iJump.Set(v.Screen.Form!txtCopies.Text)
	v.Local.iCopies.Set(v.Screen.Form!txtCopies.Text)
	'Check Beg not empty
	f.Intrinsic.Control.If(v.Screen.Form!txtStartSeq.Text, =, "")
		f.ODBC.Connection!con.OpenCompanyConnection
			f.Intrinsic.String.Build("Select top 1 Serial_Num from GCG_6632_SN_RECORDS where customer = '{0}' and part = '{1}' order by Serial_Num desc", v.Global.sCustomer, v.Global.sPart, v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fBeg)
			f.Intrinsic.Math.Add(v.Local.fBeg, v.Local.iJump, v.Local.fBeg)
			gui.Form.txtStartSeq.Text(v.Local.fBeg)
		f.ODBC.Connection!con.Close
	f.Intrinsic.Control.Else
		v.Local.fBeg.Set(v.Screen.Form!txtStartSeq.Text)
	f.Intrinsic.Control.EndIf	
	'Get End Seq
	f.Intrinsic.Math.Mult(v.Local.iJump, v.Global.fCustQty, v.Local.fTmp)
	f.Intrinsic.Math.Div(v.Local.fTmp, v.Local.iCopies, v.Local.fTmp)
	f.Intrinsic.Math.Add(v.Local.fTmp, v.Local.fBeg, v.Local.fEnd)
	f.Intrinsic.Math.Sub(v.Local.fEnd, 1, v.Local.fEnd)
	'check if there are any rows in between.
	f.ODBC.Connection!con.OpenCompanyConnection
	 	f.Intrinsic.String.Build("Select * from GCG_6632_SN_RECORDS where customer = '{0}' and part = '{1}' and Serial_Num >= '{2}' and Serial_Num <= '{3}'", v.Global.sCustomer, v.Global.sPart, v.Local.fBeg, v.Local.fEnd, v.Local.sSQL)
	 	v.Local.sRet.Set("")
	 	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
	 	f.Intrinsic.Control.If(v.Local.sRet.Trim, =, "")
	 		gui.Form.txtEndSeq.Text(v.Local.fEnd)
	 		v.Global.bCal.Set(True)
	 		f.Intrinsic.Control.If(v.Global.bFR)
	 			f.Intrinsic.UI.Msgbox("Calculation Complete.")
	 		f.Intrinsic.Control.EndIf
	 		v.Global.bFR.Set(True)
	 	f.Intrinsic.Control.Else
	 		f.Intrinsic.Control.If(v.Global.bFR)
	 			f.Intrinsic.UI.Msgbox("Not enough Serial Numbers.")
	 		f.Intrinsic.Control.EndIf
	 		v.Global.bFR.Set(True)
	 		
	 		f.Intrinsic.String.Build("Select top 1 Serial_Num from GCG_6632_SN_RECORDS where customer = '{0}' and part = '{1}' order by Serial_Num desc", v.Global.sCustomer, v.Global.sPart, v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fBeg)
			gui.Form.txtStartSeq.Text(v.Local.fBeg.++)
	 	f.Intrinsic.Control.EndIf
	f.ODBC.Connection!con.Close
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdCalc_Click.End

Program.Sub.loadDefaults.Start
v.Local.sSQL.Declare
v.Local.fNumber.Declare
v.Local.fNewQty.Declare
v.Local.fStart.Declare
v.Local.fEnd.Declare
f.Intrinsic.Control.Try
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select * from GCG_6632_SN_MAINT where customer = '{0}' and part = '{1}'", v.Global.sCustomer, v.Global.sPart, v.Local.sSQL)
		f.Data.Datatable.CreateFromSQL("defaultsDT", "con", v.Local.sSQL)
	f.ODBC.Connection!con.Close
	'Check if datatable is empty
	f.Intrinsic.Control.If(v.DataTable.defaultsDT.RowCount, =, 0)
		f.Intrinsic.Control.CallSub(enableTXT)
		gui.Form.txtCustOrder.Text(v.Global.fCustQty)
		gui.Form.txtTotalQty.Text(v.Global.fCustQty)
		gui.Form.txtStartSeq.Text("1")
		gui.Form.txtEndSeq.Text(v.Global.fCustQty)
		v.Global.bLD.Set(True)
	f.Intrinsic.Control.Else
		'Set Variables. and get qty
		v.Local.fNumber.Set(v.DataTable.defaultsDT(0).Copies!FieldVal)
		f.Intrinsic.Math.Div(v.Global.fCustQty, v.Local.fNumber, v.Local.fNewQty)
		'Load Defaults
		gui.Form.txtPrefix.Text(v.DataTable.defaultsDT(0).Prefix!FieldValTrim)
		gui.Form.txtMask.Text(v.DataTable.defaultsDT(0).Mask!FieldValTrim)
		gui.Form.txtSuffix.Text(v.DataTable.defaultsDT(0).Suffix!FieldValTrim)
		gui.Form.txtJump.Text(v.DataTable.defaultsDT(0).Jump!FieldVal)
		gui.Form.txtCopies.Text(v.DataTable.defaultsDT(0).Copies!FieldVal)
		gui.Form.txtCustOrder.Text(v.Global.fCustQty)		
		gui.Form.txtTotalQty.Text(v.Local.fNewQty)
		'Load Initial Sequence
		f.ODBC.Connection!con.OpenCompanyConnection
			f.Intrinsic.String.Build("Select top 1 Serial_Num from GCG_6632_SN_RECORDS where customer = '{0}' and part = '{1}' order by Serial_Num desc", v.Global.sCustomer, v.Global.sPart, v.Local.sSQL)
			f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.fStart)
			gui.Form.txtStartSeq.Text(v.Local.fStart)
			f.Intrinsic.Math.Add(v.Local.fStart, v.Local.fNewQty, v.Local.fEnd)
		f.ODBC.Connection!con.Close
		gui.Form.txtEndSeq.Text(v.Local.fEnd)
		'Initial Calc.
		f.Intrinsic.Control.CallSub("cmdCalc_Click")
	f.Intrinsic.Control.EndIf
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadDefaults.End

Program.Sub.cmdSave_Click.Start
v.Local.iCnt.Declare
v.Local.sSQL.Declare
v.Local.fStart.Declare
v.Local.fEnd.Declare

v.Local.sPrefix.Declare
v.Local.sMask.Declare
v.Local.sSuffix.Declare
v.Local.iJump.Declare
v.Local.iCopies.Declare
v.Local.sSN.Declare
v.Local.sRet.Declare
v.Local.sText.Declare
f.Intrinsic.Control.Try
	v.Local.fStart.Set(v.Screen.Form!txtStartSeq.Text)
	v.Local.fEnd.Set(v.Screen.Form!txtEndSeq.Text)
	v.Local.sPrefix.Set(v.Screen.Form!txtPrefix.Text)
	v.Local.sMask.Set(v.Screen.Form!txtMask.Text)
	v.Local.sSuffix.Set(v.Screen.Form!txtSuffix.Text)
	v.Local.iJump.Set(v.Screen.Form!txtJump.Text)
	v.Local.iCopies.Set(v.Screen.Form!txtCopies.Text)
	f.Intrinsic.Control.If(v.Global.bCal.Not)
		f.Intrinsic.UI.Msgbox("Please Calculate before saving.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.If(Variable.Passed.000033, =, "")
		Variable.Passed.000033.Set("Serialized")		
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.InvokeWaitDialog("Calcualting...")	
	'Loop Through
	f.ODBC.Connection!con.OpenCompanyConnection	
		'Save Defaults
		f.Intrinsic.Control.If(v.Global.bLD)
			f.Intrinsic.String.Build("Insert into  GCG_6632_SN_MAINT (Customer, Part, Prefix, Mask, Suffix, Jump, Copies) Values ('{0}', '{1}', '{2}', '{3}', '{4}', '{5}', '{6}')", v.Global.sCustomer, v.Global.sPart, v.Local.sPrefix, v.Local.sMask, v.Local.sSuffix, v.Local.iJump, v.Local.iCopies, v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.Intrinsic.Control.EndIf
		f.Intrinsic.String.Build("Select * from GCG_6632_SN_RECORDS where customer = '{0}' and part = '{1}' and job = '{2}' and js = '{3}'", v.Global.sCustomer, v.Global.sPart, v.Global.sJob, v.Global.sSuffix, v.Local.sSQL)
		f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, v.Local.sRet)
		
		f.Intrinsic.Control.If(v.Local.sRet.Trim, <>, "")
			f.Intrinsic.UI.Msgbox("Serial Numbers Already Exists.")
			f.ODBC.Connection!con.Close
			f.Intrinsic.UI.CloseWaitDialog
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.For(v.Local.iCnt, v.Local.fStart, v.Local.fEnd, v.Local.iJump)
			'Get SN
			f.Intrinsic.String.Format(v.Local.iCnt, v.Local.sMask, v.Local.sSN)
			f.Intrinsic.String.Build("{0}{1}{2}", v.Local.sPrefix.Trim, v.Local.sSN.Trim, v.Local.sSuffix.Trim, v.Local.sSN)
			f.Intrinsic.Control.If(v.Local.iCnt, =, v.Local.fStart)
				v.Local.sText.Set(v.Local.sSN)
			f.Intrinsic.Control.EndIf
			'Save Record
			f.Intrinsic.String.Build("Insert into GCG_6632_SN_RECORDS (Customer, Part, Prefix, Mask, Suffix, Jump, Copies, Serial_Num, Serial_Full, Job, JS, Date_SN, User_SN) Values ('{0}', '{1}', '{2}', '{3}', '{4}', '{5}', '{6}', '{7}', '{8}', '{9}', '{10}', '{11}', '{12}')", v.Global.sCustomer, v.Global.sPart, v.Local.sPrefix.Trim, v.Local.sMask.Trim, v.Local.sSuffix.Trim, v.Local.iJump, v.Local.iCopies, v.Local.iCnt, v.Local.sSN.Trim, v.Global.sJob, v.Global.sSuffix, v.Ambient.Date.PervasiveDate, v.Caller.User, v.Local.sSQL)
			f.ODBC.Connection!con.Execute(v.Local.sSQL)
		f.Intrinsic.Control.Next(v.Local.iCnt)
	f.ODBC.Connection!con.Close
	'Sn
	f.Intrinsic.String.Build("{0} Thru {1}", v.Local.sText, v.Local.sSN, v.Local.sText)
	'Set Comment
	f.Intrinsic.Control.If(v.Local.sText.Length, >, 52)
		f.Intrinsic.String.Build("SN: {0}", v.Local.sText, v.Local.sText)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Serial Number:{0}", v.Local.sText, v.Local.sText)
	f.Intrinsic.Control.EndIf
	Variable.Passed.000034.Set(v.Local.sText)
	f.Intrinsic.UI.CloseWaitDialog
	f.Intrinsic.UI.Msgbox("Save Complete.")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.enableTXT.Start
f.Intrinsic.Control.Try
	'Enable Txt 
	gui.Form.txtPrefix.Enabled(True)
	gui.Form.txtMask.Enabled(True)
	gui.Form.txtSuffix.Enabled(True)
	gui.Form.txtJump.Enabled(True)
	gui.Form.txtCopies.Enabled(True)
	'Set Defaults.
	gui.Form.txtJump.Text("1")
	gui.Form.txtCopies.Text("1")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.enableTXT.End

Program.Sub.Form2_UnLoad.Start
f.Intrinsic.Control.End
Program.Sub.Form2_UnLoad.End

Program.Sub.createDisplayDT.Start
v.Local.sSQL.Declare
f.Intrinsic.Control.Try
	f.ODBC.Connection!con.OpenCompanyConnection
		f.Intrinsic.String.Build("Select * from GCG_6632_SN_RECORDS where job = '{0}'", v.Global.sJob, v.Local.sSQL )
		f.Data.Datatable.CreateFromSQL("displayDT", "con", v.Local.sSQL, True)
		f.Data.Datatable.AddColumn("displayDT", "Select_Col", "Boolean", False)
	f.ODBC.Connection!con.Close
	
	f.Data.DataView.Create("displayDT", "displayDV", 22)
	gui.Form2.GsGcDisplay.AddGridviewFromDataview("displayGV", "displayDT", "displayDV")
	gui.Form2.GsGcDisplay.MainView("displayGV")
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.createDisplayDT.End

Program.Sub.loadGridProperties.Start
v.Local.iCnt.Declare
v.Local.sFields.Declare
v.Local.iVisibleIndex.Declare
f.Intrinsic.Control.Try
	f.Intrinsic.String.Split(v.DataTable.displayDT.FieldNames, "*!*", v.Local.sFields)
	f.Intrinsic.Control.For(v.Local.iCnt, 0, v.Local.sFields.UBound, 1)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderFontBold", True)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "Visible", False)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "ReadOnly", True)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "AllowEdit", False)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderHAlignment", "Near")
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "CellHAlignment", "Near")
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderBackColor", v.Color.GSS)
		gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", v.Local.sFields(v.Local.iCnt), "HeaderForeColor", v.Color.White)
	f.Intrinsic.Control.Next(v.Local.iCnt)
	
	'GridView Properties
	gui.Form2.GsGcDisplay.BestFitColumns("displayGV")
	gui.Form2.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewColumnAutoWidth", False)
	'gui.Form2.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsViewShowAutoFilterRow", True)
	'gui.Form2.GsGcDisplay.SetGridviewProperty("displayGV", "OptionsFindAlwaysVisible", True)
	'gui.Form2.GsGcDisplay.SetGridviewProperty("displayGV", "Showgrouppanel", True)
	
	'Possible Column Properties 
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Select_Col", "ReadOnly", False)
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Select_Col", "AllowEdit", True)
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Default", "HeaderHAlignment", "Center")
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Default", "CellHAlignment", "Center")
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Default", "Caption", "Default")
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Default", "Visible", False)
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Default", "DisplayCustomDatetime", "d")
	
	'VisibleIndex
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Select_Col", "VisibleIndex", v.Local.iVisibleIndex)
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Job", "VisibleIndex", v.Local.iVisibleIndex.++)
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "JS", "VisibleIndex", v.Local.iVisibleIndex.++)
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Part", "VisibleIndex", v.Local.iVisibleIndex.++)
	gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Serial_Full", "VisibleIndex", v.Local.iVisibleIndex.++)
	'gui.Form2.GsGcDisplay.SetColumnProperty("displayGV", "Job", "VisibleIndex", v.Local.iVisibleIndex.++)
	
	'Conditional Formatting
	'gui.Form2.GsGcDisplay.AddStyleFormatCondition("displayGV", "columnName", "TagName", "EQUAL", 1)
	'gui.Form2.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "ApplyToRow", True) 
	'gui.Form2.GsGcDisplay.SetStyleFormatConditionProperty("displayGV", "columnName", "TagName", "BackColor", "Color") 
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.loadGridProperties.End

Program.Sub.cmdSelect_Click.Start
v.Local.fCopies.Declare
v.Local.fQty.Declare
v.Local.sText.Declare
f.Intrinsic.Control.Try
	v.Local.fCopies.Set(v.Screen.Form!txtCopies.Text)
	f.Intrinsic.Control.If(v.Local.fCopies, =, 0)
		v.Local.fCopies.Set(1)
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Math.Div(v.Global.fCustQty, v.Local.fCopies, v.Local.fQty)

	f.Data.DataView.SetFilter("displayDT", "displayDV", "Select_Col = 'True'")
	f.Data.DataView.ToDataTable("displayDT", "displayDV", "saveDT")
	f.Intrinsic.Control.If(v.DataTable.saveDT.RowCount, <>, v.Local.fQty)
		f.Intrinsic.UI.Msgbox("Please select serial numbers to match Customer Qty Divided by Copies.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Data.Datatable.SetValue("saveDT", -1, "JS", v.Global.sSuffix)
	f.Data.Datatable.RemoveColumn("saveDT", "Select_Col")
	f.ODBC.Connection!con.OpenCompanyConnection
	 	f.Data.Datatable.SaveToDB("saveDT", "con", "GCG_6632_SN_RECORDS", "Customer*!*Part*!*Serial_Full*!*Job*!*JS", 128)
	f.ODBC.Connection!con.Close
	f.Intrinsic.Control.End
	'
	f.Intrinsic.Control.If(Variable.Passed.000033, =, "")
		Variable.Passed.000033.Set("Serialized")		
	f.Intrinsic.Control.EndIf
	f.Intrinsic.String.Build("{0} Thru {1}", v.DataTable.saveDT(0).Serial_Full!FieldValTrim, v.DataTable.saveDT(v.DataTable.saveDT.RowCount--).Serial_Full!FieldValTrim, v.Local.sText)
	f.Intrinsic.Control.If(v.Local.sText.Length, >, 52)
		f.Intrinsic.String.Build("SN: {0}", v.Local.sText, v.Local.sText)
	f.Intrinsic.Control.Else
		f.Intrinsic.String.Build("Serial Number:{0}", v.Local.sText, v.Local.sText)
	f.Intrinsic.Control.EndIf
	Variable.Passed.000034.Set(v.Local.sText)
f.Intrinsic.Control.Catch
	f.Intrinsic.Control.CallSub(ErrorMsg, CurrentSub, v.Ambient.CurrentSubroutine)
f.Intrinsic.Control.EndTry
Program.Sub.cmdSelect_Click.End

Program.Sub.ErrorMsg.Start
v.Local.sError.Declare

'Generic Error message.
f.Intrinsic.String.Build("Project GCG_6632_SN_CREATE.g2u {0}{0}Subroutine: {1}{0}Error: {2} with Description: {3}", v.Ambient.NewLine, v.Args.CurrentSub, v.Ambient.ErrorNumber, v.Ambient.ErrorDescription, v.Local.sError)
f.Intrinsic.UI.Msgbox(v.Local.sError)
Program.Sub.ErrorMsg.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$aanazco$}$20220413165515618$}$7aQAV3Tor/tR9bkuakHbuzQlHVuXCGOz5x4kUt/VE2TrvakmYYtStiWILNvkJxjZ9+PV7REpojM=
Program.Sub.Comments.End